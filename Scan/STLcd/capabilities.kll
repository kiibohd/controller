Name = STLcdCapabilities;
Version = 0.1;
Author = "HaaTa (Jacob Alexander) 2015";
KLL = 0.3c;

# Modified Date
Date = 2015-08-01;

# Defines available to the STLcd sub-module

# PWM Prescalar
# In general this can be left alone
# A higher prescalar should be lower power usage (less switching)
# However, flickering may be noticeable.
#
# Here's a calculation table valid at a 72 MHz system clock
# Prescalars range from 0 to 7 (1 to 128)

# Base FTM clock selection (72 MHz system clock)
# @ 0xFFFF period, 72 MHz / (0xFFFF * 2) = Actual period
# Higher pre-scalar will use the most power (also look the best)
# Pre-scalar calculations
# 0 -      72 MHz -> 549 Hz
# 1 -      36 MHz -> 275 Hz
# 2 -      18 MHz -> 137 Hz
# 3 -       9 MHz ->  69 Hz (Slightly visible flicker)
# 4 -   4 500 kHz ->  34 Hz (Visible flickering)
# 5 -   2 250 kHz ->  17 Hz
# 6 -   1 125 kHz ->   9 Hz
# 7 - 562 500  Hz ->   4 Hz
STLcdBacklightPrescalar => STLcdBacklightPrescalar_define;
STLcdBacklightPrescalar = 0;

# Default Backlight Channel Brightness
# There are 3 channels, RGB
# In order to get other colors you must mix the 3 colors
# Each channel is a 16-bit register (65536 levels)
# Technically, this means, the backlight is a 48-bit RGB pixel
# In practice, it may be difficult to get color consistency at times if too bright or too dim
STLcdBacklightRed   => STLcdBacklightRed_define;
STLcdBacklightGreen => STLcdBacklightGreen_define;
STLcdBacklightBlue  => STLcdBacklightBlue_define;

# Defaults to 6% brightness, white
STLcdBacklightRed   = 0x0FFF;
STLcdBacklightGreen = 0x0FFF;
STLcdBacklightBlue  = 0x0FFF;


# Default LCD Image
#
# The easiest way to generate this data is using the bitmap2Struct.py script in this folder
# It will output the necessary uint8_t array to set here
#
STLcdDefaultImage => STLcdDefaultImage_define;

# Only the data portion is required
# Must be on a single line
STLcdDefaultImage = "
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
";

STLcdSmallFont => STLcdSmallFont_define;
STLcdSmallFontWidth => STLcdSmallFontWidth_define;
STLcdSmallFontHeight => STLcdSmallFontHeight_define;
STLcdSmallFontSize => STLcdSmallFontSize_define;

STLcdSmallFont = "0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xe8, 0x03, 0xbe, 0xef, 0x03, 0x00, 0x00, 0x00, 0x80, 0x0e, 0x00, 0x30, 0x00, 0x03, 0x3e, 0xe5, 0x03, 0x94, 0x8f, 0x02, 0x24, 0x22, 0x01, 0xbc, 0xee, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x27, 0x02, 0x22, 0x07, 0x00, 0x28, 0x84, 0x02, 0x08, 0x87, 0x00, 0x02, 0x01, 0x00, 0x08, 0x82, 0x00, 0x80, 0x00, 0x00, 0x06, 0x02, 0x03, 0x9e, 0xc8, 0x03, 0x90, 0x0f, 0x00, 0xae, 0xaa, 0x03, 0xa2, 0xea, 0x03, 0x38, 0xe2, 0x03, 0xba, 0xea, 0x02, 0xbe, 0xea, 0x02, 0x26, 0x0a, 0x03, 0xbe, 0xea, 0x03, 0xba, 0xea, 0x03, 0x00, 0x05, 0x00, 0x02, 0x05, 0x00, 0x08, 0x25, 0x02, 0x14, 0x45, 0x01, 0x22, 0x85, 0x00, 0xa0, 0x0a, 0x03, 0x9c, 0xaa, 0x01, 0x1e, 0xea, 0x01, 0xbe, 0x4a, 0x01, 0x9c, 0x28, 0x02, 0xbe, 0xc8, 0x01, 0xbe, 0xaa, 0x02, 0x3e, 0x8a, 0x02, 0x9c, 0xea, 0x02, 0x3e, 0xe2, 0x03, 0xa2, 0x2f, 0x02, 0x84, 0xc0, 0x03, 0x3e, 0x62, 0x03, 0xbe, 0x20, 0x00, 0x3e, 0xe6, 0x03, 0x3e, 0xe8, 0x03, 0x9c, 0xc8, 0x01, 0x3e, 0x0a, 0x01, 0x9c, 0xe9, 0x01, 0x3e, 0xab, 0x01, 0x92, 0x4a, 0x02, 0xa0, 0x0f, 0x02, 0xbc, 0xe0, 0x03, 0xb8, 0x81, 0x03, 0x3e, 0xe3, 0x03, 0x36, 0x62, 0x03, 0xb0, 0x03, 0x03, 0xa6, 0x2a, 0x03, 0xbe, 0x28, 0x02, 0x10, 0x42, 0x00, 0xa2, 0xe8, 0x03, 0x10, 0x08, 0x01, 0x82, 0x20, 0x00, 0x20, 0x04, 0x00, 0x96, 0xe6, 0x00, 0xbe, 0xc4, 0x00, 0x8c, 0x24, 0x01, 0x8c, 0xe4, 0x03, 0x8c, 0xa5, 0x01, 0x88, 0x87, 0x02, 0x4c, 0xe5, 0x01, 0x3e, 0xe4, 0x00, 0x80, 0x0b, 0x00, 0x42, 0xe0, 0x02, 0x3e, 0x23, 0x01, 0xa2, 0x2f, 0x00, 0x1e, 0xe7, 0x01, 0x1e, 0xe4, 0x00, 0x8c, 0xc4, 0x00, 0x9f, 0xc4, 0x00, 0x8c, 0xf4, 0x01, 0x0e, 0x04, 0x01, 0x8a, 0x47, 0x01, 0x90, 0x2f, 0x01, 0x9c, 0xe0, 0x01, 0x9c, 0xc1, 0x01, 0x9e, 0xe3, 0x01, 0x12, 0x23, 0x01, 0x58, 0xe1, 0x01, 0x96, 0xa7, 0x01, 0x88, 0x2d, 0x02, 0x80, 0x0d, 0x00, 0xa2, 0x8d, 0x00, 0x10, 0x0c, 0x02, 0xbe, 0xef, 0x03";
STLcdSmallFontWidth = 4;
STLcdSmallFontHeight = 6;
STLcdSmallFontSize = 3;

# LCDCharOut => LCD_charOut_capability(charactor : 1, x : 1, y : 1)

# Layer Status Display

LCDLayerDisplay      => LCD_layerStack_capability();
LCDLayerDisplayExact => LCD_layerStackExact_capability( display : 1, stack1 : 2, stack2 : 2, stack3 : 2, stack4 : 2 );


# LCD Module Enabled

LCDEnabled => LCDEnabled_define;
LCDEnabled = 1;

